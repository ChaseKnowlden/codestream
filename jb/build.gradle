plugins {
    id "java"
    id "org.jetbrains.intellij" version "0.4.7"
    id "org.jetbrains.kotlin.jvm" version "1.3.31"
}

group "com.codestream"
version "1.0.3"

sourceCompatibility = 1.8

repositories {
    jcenter()
    mavenCentral()
    maven { url = "http://maven.teamdev.com/repository/products" }
}

ext {
    jxBrowserVersion = "6.23.1"
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
    implementation "org.jetbrains.kotlin:kotlin-reflect:1.3.31"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:1.2.1"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-jdk8:1.2.1"

    implementation files("$rootDir/license.jar")
    implementation "com.teamdev.jxbrowser:jxbrowser-win32:${jxBrowserVersion}"
    implementation "com.teamdev.jxbrowser:jxbrowser-win64:${jxBrowserVersion}"
    implementation "com.teamdev.jxbrowser:jxbrowser-mac:${jxBrowserVersion}"
    implementation "com.teamdev.jxbrowser:jxbrowser-linux64:${jxBrowserVersion}"
    implementation files("$rootDir/jxbrowser-${jxBrowserVersion}.jar")

    implementation group: "org.eclipse.lsp4j", name: "org.eclipse.lsp4j", version: "0.6.0"
    implementation "com.github.salomonbrys.kotson:kotson:2.5.0"

    implementation group: 'commons-io', name: 'commons-io', version: '2.6'
}

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

intellij {
    type "IC"
//    version "2018.2" // earliest version we support
//    version "2018.3.4" // you can also specify dot dot releases
//    version "IC-2018.2.7" //
    intellij.updateSinceUntilBuild false
}

runIde {
//    jbrVersion "11_0_2b159"
//    jvmArgs '-Dsun.java2d.uiScale.enabled=false'
}

import org.gradle.internal.os.OperatingSystem

task buildDeps(type: Exec) {
    String npm = 'npm';
    if (OperatingSystem.current().isWindows()) {
        npm = 'npm.cmd'
    }

    workingDir "$projectDir"
    commandLine npm, 'run', 'bundle'
}

task copyAgent(type: Copy) {
    from "$projectDir/../codestream-lsp-agent/dist"
    include "**/*"
    into "$projectDir/src/main/resources/agent"
}
copyAgent.dependsOn buildDeps

task buildDependencies {}
buildDependencies.dependsOn buildDeps, copyAgent

buildPlugin.dependsOn buildDependencies
